#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: build_test

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-21.02

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    
    - name: 清理空间和安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt update
        sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* moby* snap*
        sudo -E apt -y full-upgrade
        sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E systemctl daemon-reload
        sudo -E apt -y autoremove --purge
        sudo -E apt clean
        sudo -E timedatectl set-timezone "Asia/Shanghai"
        
    - name: 检查项目分支
      uses: actions/checkout@v3
      
    - name: 下载固件源码
      run: |
        df -hT $PWD
        echo -e "$(nproc)线程"
        git clone $REPO_URL -b $REPO_BRANCH openwrt

    - name: 更新插件
      working-directory: ./openwrt
      run: |
        ./scripts/feeds clean
        ./scripts/feeds update -a
      
    - name: 安装插件
      run: cd openwrt && ./scripts/feeds install -a
      
    - name: 二次安装插件
      run: cd openwrt && ./scripts/feeds install -a
  
    - name: 导入额外插件源码
      working-directory: ./openwrt
      run: |
        git clone --depth=1 https://github.com/fw876/helloworld.git ./package/helloworld
        
    - name: 加载自定义设置
      env:
        CONFIG_FILE: x64.config
      run: |
        mv $CONFIG_FILE openwrt/.config
        chmod +x ./diy_x64.sh && ./diy_x64.sh
        cd openwrt && make defconfig
        
    - name: 下载安装包
      run: |
        cd openwrt
        make download -j16
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    #- name: 构建固件
    #  working-directory: ./openwrt
    #  run: |
    #    echo "======================="
    #    echo "Space usage:"
    #    echo "======================="
    #    df -h
    #    echo "======================="
    #    echo -e "$(nproc) thread compile"
    #    make -j$(nproc) V=s
        #echo "status=success" >>$GITHUB_OUTPUT
        #grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        #[ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        #echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: 构建固件
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
    #- name: 检查空间使用
    #  if: (!cancelled())
    #  run: df -hT
      
    - name: 上传编译信息
      uses: actions/upload-artifact@v3
      with:
        name: 上传编译信息
        path: ./artifact/buildinfo/

    - name: 上传包
      uses: actions/upload-artifact@v3
      with:
        name: 上传包
        path: ./artifact/package/

    - name: 上传固件
      uses: actions/upload-artifact@v3
      with:
        name: 上传固件
        path: ./bin/targets/
    #- name: 上传bin目录
    #  uses: actions/upload-artifact@v3
    #  if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
    #  with:
    #    name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
    #    path: openwrt/bin
        
    #- name: 整理编译文件
    #  id: organize
    #  if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
    #  run: |
    #    cd openwrt/bin/targets/*/*
    #    rm -rf packages
    #    echo "FIRMWARE=$PWD" >> $GITHUB_ENV
    #    echo "status=success" >>$GITHUB_OUTPUT
        
    - name: 删除工作流
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 3
